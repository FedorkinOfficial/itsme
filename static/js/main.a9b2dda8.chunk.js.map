{"version":3,"sources":["components/Header/Header.module.css","components/Login/Login.module.css","components/Register/Register.module.css","reducers/registerReduce.js","reducers/loginReducer.js","reducers/companiesReducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/Header.Conatainer.jsx","components/Login/Login.jsx","components/Login/Login.Container.jsx","components/Register/Register.jsx","components/Register/Register.Container.jsx","components/Profile/Profile.jsx","components/Profile/Profile.Container.jsx","components/Companies/Companies.jsx","components/Companies/CompaniesConatainer.jsx","App.js","ContainerApp.jsx","serviceWorker.js","index.js"],"names":["module","exports","initialState","changedName","changedPass","status","reason","name","pass","isAuth","authLoginAC","data","type","loginReducer","state","action","changeName","changePass","changedInfo","changeNameAC","changeInfoAC","changeInfo","addComapnyAC","reducers","combineReducers","register","login","companies","companiesReducer","store","createStore","window","Header","props","className","classes","header_wrap","header_menu","to","forms_wrap","HeaderAPI","axios","get","withCredentials","then","response","console","log","info","this","React","Component","HeaderContainer","connect","Login","refName","createRef","refPass","forms","onChange","current","value","ref","onClick","checkApi","check","LoginAPI","formData","FormData","append","fetch","method","body","json","changePassAC","LoginContainer","Register","postApi","RegisterAPI","RegisterContainer","clickRegisterAC","Profile","ProfileAPI","ProfileContainer","Companies","nameRef","nameInfo","addComapny","ComapniesAPI","ComapniesContainer","App","path","render","ContainerApp","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a9b2dda8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrap\":\"Header_header_wrap__2_07y\",\"header_menu\":\"Header_header_menu__373iT\",\"forms_wrap\":\"Header_forms_wrap__1Gzig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forms\":\"Login_forms__XT70k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forms\":\"Register_forms__7jrs_\"};","const CHANGE_NAME = 'CHANGE_NAME';\r\nconst CHANGE_PASS = 'CHANGE_PASS';\r\nconst CLICK_REGISTER = 'CLICK_REGISTER';\r\n\r\n\r\n\r\nlet initialState = {\r\n    changedName: '',\r\n    changedPass: '',\r\n    status: false,\r\n    reason: ''\r\n}\r\n\r\n\r\nexport let registerReduce = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case CHANGE_NAME:{\r\n            return {\r\n                ...state,\r\n                changedName: action.changedName\r\n            }    \r\n        }\r\n        case CHANGE_PASS:{\r\n            return {\r\n                ...state,\r\n                changedPass: action.changedPass\r\n            }    \r\n        }\r\n        case CLICK_REGISTER:{\r\n            return {\r\n                ...state,\r\n                changedName: '',\r\n                changedPass: '',\r\n                status: true,\r\n                reason: action.reason\r\n            }    \r\n        }\r\n        default:{\r\n            return{\r\n                ...state\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nexport const changeNameAC = (changedName) => ({type: CHANGE_NAME, changedName});\r\nexport const changePassAC = (changedPass) => ({type: CHANGE_PASS, changedPass});\r\nexport const clickRegisterAC = (reason) => ({type: CLICK_REGISTER, reason});","const  CHANGE_NAME = 'CHANGE_NAME';\r\nconst  CHANGE_PASS = 'CHANGE_PASS';\r\nconst  AUTH_LOGIN = 'AUTH_LOGIN';\r\n\r\n\r\nlet initialState = {\r\n    changedName: '',\r\n    changedPass: null,\r\n    name: null,\r\n    pass: null,\r\n    isAuth: false\r\n}\r\n\r\nlet loginReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case CHANGE_NAME:{\r\n            return{\r\n                ...state,\r\n                changedName: action.changeName\r\n            }\r\n        }\r\n        case CHANGE_PASS:{\r\n            return{\r\n                ...state,\r\n                changedPass: action.changePass\r\n            }\r\n        }\r\n        case AUTH_LOGIN:{\r\n            return{\r\n                ...state,\r\n                name: action.data.name,\r\n                pass: action.data.pass,\r\n                isAuth: true,\r\n                changedPass: null,\r\n                changedName: null\r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const changeNameAC = (changeName) => ({type: CHANGE_NAME, changeName});\r\nexport const changePassAC = (changePass) => ({type: CHANGE_PASS, changePass});\r\nexport const authLoginAC = (data) => ({type: AUTH_LOGIN, data});\r\n\r\n\r\nexport default loginReducer;","const  CHANGE_NAME = 'CHANGE_NAME';\r\nconst  CHANGE_INFO = 'CHANGE_INFO';\r\nconst  ADD_COMPANY = 'ADD_COMPANY';\r\n\r\n\r\nlet initialState = {\r\n    changedName: null,\r\n    changedInfo: null\r\n}\r\n\r\nlet loginReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case CHANGE_NAME:{\r\n            return{\r\n                ...state,\r\n                changedName: action.changeName\r\n            }\r\n        }\r\n        case CHANGE_INFO:{\r\n            return{\r\n                ...state,\r\n                changedInfo: action.changeInfo\r\n            }\r\n        }\r\n        case ADD_COMPANY:{\r\n            return{\r\n                ...state,\r\n                changedPass: null,\r\n                changeInfo: null\r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const changeNameAC = (changeName) => ({type: CHANGE_NAME, changeName});\r\nexport const changeInfoAC = (changeInfo) => ({type: CHANGE_INFO, changeInfo});\r\nexport const addComapnyAC = (data) => ({type: ADD_COMPANY, data});\r\n\r\n\r\nexport default loginReducer;","import {combineReducers, createStore} from 'redux';\r\nimport {registerReduce} from '../reducers/registerReduce';\r\nimport loginReducer from '../reducers/loginReducer';\r\nimport companiesReducer from '../reducers/companiesReducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    register: registerReduce,\r\n    login: loginReducer,\r\n    companies: companiesReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nlet Header = (props) => {\r\n        return (\r\n            <div className={classes.header_wrap}>\r\n                <div className={classes.header_menu}>\r\n                    <ul>\r\n                        <li><NavLink to='/mycompany'>My company</NavLink></li>\r\n                        <li><NavLink to='/vacancies'>Vacancies</NavLink></li>\r\n                        <li><NavLink to='/bank'>Bank</NavLink></li>\r\n                        <li><NavLink to='/marketplace'>Marketplace</NavLink></li>\r\n                        <li><NavLink to='/myprofile'>Profile</NavLink></li>\r\n                    </ul>\r\n                </div>\r\n                <div className={classes.forms_wrap}>\r\n                    {props.state.login.isAuth ? <div></div> : <NavLink to='/login'>log In</NavLink>}\r\n                    <NavLink to='/register'>Register</NavLink>\r\n                </div>                \r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from './Header';\r\nimport axios from 'axios';\r\nimport {authLoginAC} from '../../reducers/loginReducer';\r\n\r\n\r\n\r\nclass HeaderAPI extends React.Component{\r\n    componentDidMount(){\r\n        let authLogin = (data) => this.props.authLoginAC(data)\r\n        axios.get('http://itsmeapi/api/users', {withCredentials: true}).then(function(response) {\r\n                console.log(response);\r\n                if(!response.data.status){\r\n                     console.log(\"There are not cookies\");\r\n                } else {\r\n                    authLogin(response.data.info.info);\r\n                }\r\n            })\r\n    }\r\n \r\n    render(){\r\n        return(\r\n            <Header state={this.props.state}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nconst HeaderContainer = connect(mapStateToProps, {authLoginAC})(HeaderAPI);\r\nexport default HeaderContainer;","import React from 'react';\r\nimport classes from './Login.module.css';\r\n\r\n\r\nlet Login = (props) => {\r\n    if(props.state.login.isAuth){\r\n        return(\r\n            <div>\r\n                Вы авторизированы!\r\n            </div>\r\n        )\r\n    } else {\r\n        let refName = React.createRef();\r\n        let refPass = React.createRef();\r\n        let changeName = () => {\r\n            props.changeName(refName.current.value);\r\n        }\r\n        let changePass = () => {\r\n            props.changePass(refPass.current.value);\r\n        }\r\n        let checkApi = () => {\r\n            props.checkApi()\r\n        }\r\n        let check = () => {\r\n            props.check()\r\n        }\r\n        return(\r\n            <div className={classes.forms}>\r\n                <input type=\"text\" onChange={changeName} value={props.state.register.changedName} ref={refName}/>\r\n                <input type=\"text\" onChange={changePass} value={props.state.register.changedPass} ref={refPass}/>\r\n                <button onClick={checkApi}>Login</button>\r\n                <button onClick={check}>Add</button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Login from './Login';\r\nimport {changeNameAC, changePassAC, authLoginAC} from '../../reducers/loginReducer';\r\n\r\nclass LoginAPI extends React.Component{\r\n    checkApi = () => {\r\n        let authLogin = (data) => this.props.authLoginAC(data);  \r\n        let formData = new FormData();\r\n        formData.append('name', this.props.state.login.changedName);\r\n        formData.append('pass', this.props.state.login.changedPass);\r\n        fetch(`http://itsmeapi/api/login`, {method: 'POST', body: formData}, {withCredentials: true}).then(function(response) {\r\n                console.log(response);\r\n                return response.json();\r\n            }).then(function(body) { \r\n                console.log(body);\r\n                authLogin(body); \r\n            });   \r\n    }\r\n   \r\n    render(){\r\n        return(\r\n            <Login state={this.props.state}\r\n                   changeName={this.props.changeNameAC}\r\n                   changePass={this.props.changePassAC}\r\n                   checkApi={this.checkApi}\r\n                   check={this.check}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, {changeNameAC, changePassAC, authLoginAC})(LoginAPI);\r\nexport default LoginContainer;","import React from 'react';\r\nimport classes from './Register.module.css';\r\n\r\n\r\nlet Register = (props) => {\r\n    \r\n    if(props.state.login.isAuth){\r\n        return(\r\n            <div>\r\n                Вы авторизированы!\r\n            </div>\r\n        )   \r\n    } else {\r\n        let refName = React.createRef();\r\n        let refPass = React.createRef();\r\n        let changeName = () => {\r\n            props.changeName(refName.current.value);\r\n        }\r\n        let changePass = () => {\r\n            props.changePass(refPass.current.value);\r\n        }\r\n        let clickRegister = () => {\r\n            props.postApi();\r\n        }\r\n        return(\r\n            <div className={classes.forms}>\r\n                <input type=\"text\" onChange={changeName} value={props.state.register.changedName} ref={refName}/>\r\n                <input type=\"text\" onChange={changePass} value={props.state.register.changedPass} ref={refPass}/>\r\n                <button onClick={clickRegister}>Register</button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Register from './Register';\r\nimport {changeNameAC, changePassAC, clickRegisterAC} from '../../reducers/registerReduce';\r\n\r\nclass RegisterAPI extends React.Component{\r\n    postApi = () => {\r\n        let formData = new FormData();\r\n        formData.append('name', this.props.state.register.changedName);\r\n        formData.append('pass', this.props.state.register.changedPass);\r\n        fetch(`http://itsmeapi/api/users`, {method: 'POST', body: formData}, {withCredentials: true}).then(function(response) {\r\n                console.log(response);\r\n                return response.json();\r\n            }).then(function(body) { \r\n                console.log(body);\r\n            }); \r\n    }           \r\n\r\n    render(){\r\n        return(\r\n            <Register \r\n                        state={this.props.state}\r\n                      changeName={this.props.changeNameAC}\r\n                      changePass={this.props.changePassAC}\r\n                      postApi={this.postApi}\r\n                      \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nconst RegisterContainer = connect(mapStateToProps, {changeNameAC, changePassAC, clickRegisterAC})(RegisterAPI);\r\nexport default RegisterContainer;","import React from 'react';\r\n\r\n\r\n\r\nlet Profile = (props) => {\r\n    if(props.state.login.isAuth) {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    Name: {props.state.login.name}\r\n                </div>\r\n                <div>\r\n                    Pass: {props.state.login.pass}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div>\r\n                Вы не авторизированы\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from './Profile';\r\n\r\n\r\nclass ProfileAPI extends React.Component{\r\n    render(){\r\n        return(\r\n            <Profile state={this.props.state}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        state: state\r\n    }\r\n}\r\n\r\nlet ProfileContainer = connect(mapStateToProps) (ProfileAPI);\r\nexport default ProfileContainer;","import React from 'react';\r\n\r\n\r\nlet Companies = (props) => {\r\n        let nameRef = React.createRef();\r\n        let nameInfo = React.createRef();\r\n        let changeName = () => {\r\n            props.changeName(nameRef.current.value)\r\n        }\r\n        let changeInfo = () => {\r\n            props.changeInfo(nameInfo.current.value)\r\n        }\r\n        let addComapny = () => {\r\n            props.addComapny();\r\n        }\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onChange={changeName} ref={nameRef}/>\r\n                <input type=\"text\" onChange={changeInfo} ref={nameInfo}/>\r\n                <button onClick={addComapny} >Add</button>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Companies;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Companies from './Companies';\r\nimport {addComapnyAC, changeNameAC, changeInfoAC} from '../../reducers/companiesReducer';\r\n\r\n\r\n\r\nclass ComapniesAPI extends React.Component{\r\n    postApi = () => {\r\n        let formData = new FormData();\r\n        formData.append('name', this.props.state.companies.changeName);\r\n        formData.append('info', this.props.state.companies.changedInfo);\r\n        formData.append('username', this.props.state.login.name);\r\n        fetch(`http://itsmeapi/api/company`, {method: 'POST', body: formData}, {withCredentials: true}).then(function(response) {\r\n                console.log(response);\r\n                return response.json();\r\n            }).then(function(body) { \r\n                console.log(body);\r\n            }); \r\n    } \r\n \r\n    render(){\r\n        return(\r\n            <Companies state={this.props.state}\r\n                       addComapny={addComapnyAC}\r\n                       changeName={changeNameAC}\r\n                       changeInfo={changeInfoAC}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nconst ComapniesContainer = connect(mapStateToProps, {addComapnyAC, changeNameAC, changeInfoAC})(ComapniesAPI);\r\nexport default ComapniesContainer;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport HeaderContainer from './components/Header/Header.Conatainer';\nimport LoginContainer from './components/Login/Login.Container';\nimport RegisterContainer from './components/Register/Register.Container';\nimport ProfileContainer from './components/Profile/Profile.Container';\nimport ComapniesContainer from './components/Companies/CompaniesConatainer';\n\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"App\">\n        <HeaderContainer />\n        </div>\n        <div className=\"main_body\">\n          <Route path={'/mycompany'}/>\n          <Route path={'/login'} render={() => <LoginContainer />}/>\n          <Route path={'/register'} render={() => <RegisterContainer />}/>\n          <Route path={'/myprofile'} render={() => <ProfileContainer />}/>\n          <Route path={'/mycompany'} render={() => <ComapniesContainer />}/>\n        </div>\n      </div>    \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import App from './App';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nconst ContainerApp = connect(mapStateToProps) (App);\r\n\r\nexport default ContainerApp;   ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/redux-store';\nimport './index.css';\nimport ContainerApp from './ContainerApp';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ContainerApp/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}